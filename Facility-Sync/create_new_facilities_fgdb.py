# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# create_new_facilities_fgdb.py
# Created on: 2018-04-06 11:03:51.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy
import os
import datetime


# Local variables:
fgdb_name = 'akr_facility'
fgdb_extension = '.gdb'
working_folder = r'C:\tmp\pds\facility-sync'
xdrive_folder = r'X:\AKR\Statewide\cultural'
connection_file = r'Database Connections\inpakrovmais - facilities as akr_reader_web.sde'
sde_schema = 'akr_facility2.'
tables = ['dbo.FMSSExport', 'dbo.FMSSExport_Asset', 'gis.AKR_ATTACH']
fcs = ['dbo.AKR_BLDG_PT', 'dbo.AKR_BLDG_PY', 'gis.AKR_ATTACH_PT', 'gis.PARKLOTS_PY', 'gis.ROADS_LN', 
       'gis.TRAILS_ATTRIBUTE_PT', 'gis.TRAILS_FEATURE_PT', 'gis.TRAILS_LN']


# derived variables
datestamp = str(datetime.date.today())
xdrive_fgdb = os.path.join(xdrive_folder, fgdb_name + fgdb_extension)
new_fgdb = os.path.join(working_folder, fgdb_name + "_new" + fgdb_extension)
saved_fgdb = os.path.join(working_folder, fgdb_name + "_" + datestamp + fgdb_extension)
sde_tables = [os.path.join(connection_file, sde_schema + table) for table in tables]
sde_fcs = [os.path.join(connection_file, sde_schema + fc) for fc in fcs]

Building_Polygon = os.path.join(new_fgdb, 'AKR_BLDG_PY')
PARKLOTS_py = os.path.join(new_fgdb, 'PARKLOTS_PY')
ROADS_ln = os.path.join(new_fgdb, 'ROADS_LN')
TRAILS_ln = os.path.join(new_fgdb, 'TRAILS_LN')


# Process: Delete
if arcpy.Exists(new_fgdb):
    arcpy.Delete_management(new_fgdb, "Workspace")
if arcpy.Exists(saved_fgdb):
    arcpy.Delete_management(saved_fgdb, "Workspace")

# Process: Saved published fgdb
arcpy.Copy_management(xdrive_fgdb, saved_fgdb, "Workspace")
# Process: Create File GDB
folder, fgdb = os.path.split(new_fgdb)
arcpy.CreateFileGDB_management(folder, fgdb, "CURRENT")


# Process: Table To Geodatabase (multiple)
arcpy.TableToGeodatabase_conversion(sde_tables, new_fgdb)
# Process: Feature Class to Geodatabase (multiple)
arcpy.FeatureClassToGeodatabase_conversion(sde_fcs, new_fgdb)


# Process: Add Field
arcpy.AddField_management(PARKLOTS_py, "Perim_Feet", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")
# Process: Calculate Field
arcpy.CalculateField_management(PARKLOTS_py, "Perim_Feet", "!shape.length@feet!", "PYTHON_9.3", "")

# Process: Add Field (2)
arcpy.AddField_management(PARKLOTS_py, "Area_SqFt", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")
# Process: Calculate Field (2)
arcpy.CalculateField_management(PARKLOTS_py, "Area_SqFt", "!shape.area@SQUAREFEET!", "PYTHON_9.3", "")

# Process: Add Field (3)
arcpy.AddField_management(Building_Polygon, "Perim_Feet", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")
# Process: Calculate Field (3)
arcpy.CalculateField_management(Building_Polygon, "Perim_Feet", "!shape.length@feet!", "PYTHON_9.3", "")

# Process: Add Field (4)
arcpy.AddField_management(Building_Polygon, "Area_SqFt", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")
# Process: Calculate Field (4)
arcpy.CalculateField_management(Building_Polygon, "Area_SqFt", "!shape.area@SQUAREFEET!", "PYTHON_9.3", "")

# Process: Add Field (5)
arcpy.AddField_management(ROADS_ln, "Length_Feet", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")
# Process: Calculate Field (6)
arcpy.CalculateField_management(ROADS_ln, "Length_Feet", "!shape.length@feet!", "PYTHON_9.3", "")

# Process: Add Field (6)
arcpy.AddField_management(ROADS_ln, "Length_Miles", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")
# Process: Calculate Field (5)
arcpy.CalculateField_management(ROADS_ln, "Length_Miles", "!shape.length@miles!", "PYTHON_9.3", "")

# Process: Add Field (7)
arcpy.AddField_management(TRAILS_ln, "Length_Feet", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")
# Process: Calculate Field (8)
arcpy.CalculateField_management(TRAILS_ln, "Length_Feet", "!shape.length@feet!", "PYTHON_9.3", "")

# Process: Add Field (8)
arcpy.AddField_management(TRAILS_ln, "Length_Miles", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")
# Process: Calculate Field (7)
arcpy.CalculateField_management(TRAILS_ln, "Length_Miles", "!shape.length@miles!", "PYTHON_9.3", "")
